
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE BangPatterns #-}
module HuffmanTable
(
   huffmanTable,
   huffmanTree,
   HuffmanTree(..),
   Bit(..)
) where

import Data.List as L
import Data.BitVector as BV


data Bit = T | F deriving (Show, Eq)
huffmanTable :: [(Int, [Bit])]
huffmanTable = [
  (  0,[T,T,T,T,T,T,T,T,T,T,F ,F ,F])
 ,(  1,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F ,F])
 ,(  2,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F])
 ,(  3,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T])
 ,(  4,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F])
 ,(  5,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T])
 ,(  6,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(  7,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(  8,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(  9,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,( 10,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F])
 ,( 11,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,( 12,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,( 13,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T])
 ,( 14,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,( 15,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,( 16,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,( 17,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F])
 ,( 18,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T])
 ,( 19,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F])
 ,( 20,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T])
 ,( 21,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F])
 ,( 22,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F])
 ,( 23,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T])
 ,( 24,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F])
 ,( 25,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T])
 ,( 26,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F])
 ,( 27,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T])
 ,( 28,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F])
 ,( 29,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T])
 ,( 30,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F])
 ,( 31,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T])
 ,( 32,[F ,T,F ,T,F ,F])
 ,( 33,[T,T,T,T,T,T,T,F ,F ,F])
 ,( 34,[T,T,T,T,T,T,T,F ,F ,T])
 ,( 35,[T,T,T,T,T,T,T,T,T,F ,T,F])
 ,( 36,[T,T,T,T,T,T,T,T,T,T,F ,F ,T])
 ,( 37,[F ,T,F ,T,F ,T])
 ,( 38,[T,T,T,T,T,F ,F ,F])
 ,( 39,[T,T,T,T,T,T,T,T,F ,T,F])
 ,( 40,[T,T,T,T,T,T,T,F ,T,F])
 ,( 41,[T,T,T,T,T,T,T,F ,T,T])
 ,( 42,[T,T,T,T,T,F ,F ,T])
 ,( 43,[T,T,T,T,T,T,T,T,F ,T,T])
 ,( 44,[T,T,T,T,T,F ,T,F])
 ,( 45,[F ,T,F ,T,T,F])
 ,( 46,[F ,T,F ,T,T,T])
 ,( 47,[F ,T,T,F ,F ,F])
 ,( 48,[F ,F ,F ,F ,F])
 ,( 49,[F ,F ,F ,F ,T])
 ,( 50,[F ,F ,F ,T,F])
 ,( 51,[F ,T,T,F ,F ,T])
 ,( 52,[F ,T,T,F ,T,F])
 ,( 53,[F ,T,T,F ,T,T])
 ,( 54,[F ,T,T,T,F ,F])
 ,( 55,[F ,T,T,T,F ,T])
 ,( 56,[F ,T,T,T,T,F])
 ,( 57,[F ,T,T,T,T,T])
 ,( 58,[T,F ,T,T,T,F ,F])
 ,( 59,[T,T,T,T,T,F ,T,T])
 ,( 60,[T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F])
 ,( 61,[T,F ,F ,F ,F ,F])
 ,( 62,[T,T,T,T,T,T,T,T,T,F ,T,T])
 ,( 63,[T,T,T,T,T,T,T,T,F ,F])
 ,( 64,[T,T,T,T,T,T,T,T,T,T,F ,T,F])
 ,( 65,[T,F ,F ,F ,F ,T])
 ,( 66,[T,F ,T,T,T,F ,T])
 ,( 67,[T,F ,T,T,T,T,F])
 ,( 68,[T,F ,T,T,T,T,T])
 ,( 69,[T,T,F ,F ,F ,F ,F])
 ,( 70,[T,T,F ,F ,F ,F ,T])
 ,( 71,[T,T,F ,F ,F ,T,F])
 ,( 72,[T,T,F ,F ,F ,T,T])
 ,( 73,[T,T,F ,F ,T,F ,F])
 ,( 74,[T,T,F ,F ,T,F ,T])
 ,( 75,[T,T,F ,F ,T,T,F])
 ,( 76,[T,T,F ,F ,T,T,T])
 ,( 77,[T,T,F ,T,F ,F ,F])
 ,( 78,[T,T,F ,T,F ,F ,T])
 ,( 79,[T,T,F ,T,F ,T,F])
 ,( 80,[T,T,F ,T,F ,T,T])
 ,( 81,[T,T,F ,T,T,F ,F])
 ,( 82,[T,T,F ,T,T,F ,T])
 ,( 83,[T,T,F ,T,T,T,F])
 ,( 84,[T,T,F ,T,T,T,T])
 ,( 85,[T,T,T,F ,F ,F ,F])
 ,( 86,[T,T,T,F ,F ,F ,T])
 ,( 87,[T,T,T,F ,F ,T,F])
 ,( 88,[T,T,T,T,T,T,F ,F])
 ,( 89,[T,T,T,F ,F ,T,T])
 ,( 90,[T,T,T,T,T,T,F ,T])
 ,( 91,[T,T,T,T,T,T,T,T,T,T,F ,T,T])
 ,( 92,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F])
 ,( 93,[T,T,T,T,T,T,T,T,T,T,T,F ,F])
 ,( 94,[T,T,T,T,T,T,T,T,T,T,T,T,F ,F])
 ,( 95,[T,F ,F ,F ,T,F])
 ,( 96,[T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T])
 ,( 97,[F ,F ,F ,T,T])
 ,( 98,[T,F ,F ,F ,T,T])
 ,( 99,[F ,F ,T,F ,F])
 ,(100,[T,F ,F ,T,F ,F])
 ,(101,[F ,F ,T,F ,T])
 ,(102,[T,F ,F ,T,F ,T])
 ,(103,[T,F ,F ,T,T,F])
 ,(104,[T,F ,F ,T,T,T])
 ,(105,[F ,F ,T,T,F])
 ,(106,[T,T,T,F ,T,F ,F])
 ,(107,[T,T,T,F ,T,F ,T])
 ,(108,[T,F ,T,F ,F ,F])
 ,(109,[T,F ,T,F ,F ,T])
 ,(110,[T,F ,T,F ,T,F])
 ,(111,[F ,F ,T,T,T])
 ,(112,[T,F ,T,F ,T,T])
 ,(113,[T,T,T,F ,T,T,F])
 ,(114,[T,F ,T,T,F ,F])
 ,(115,[F ,T,F ,F ,F])
 ,(116,[F ,T,F ,F ,T])
 ,(117,[T,F ,T,T,F ,T])
 ,(118,[T,T,T,F ,T,T,T])
 ,(119,[T,T,T,T,F ,F ,F])
 ,(120,[T,T,T,T,F ,F ,T])
 ,(121,[T,T,T,T,F ,T,F])
 ,(122,[T,T,T,T,F ,T,T])
 ,(123,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,F])
 ,(124,[T,T,T,T,T,T,T,T,T,F ,F])
 ,(125,[T,T,T,T,T,T,T,T,T,T,T,T,F ,T])
 ,(126,[T,T,T,T,T,T,T,T,T,T,T,F ,T])
 ,(127,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F])
 ,(128,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(129,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T,F])
 ,(130,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(131,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(132,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T,T])
 ,(133,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F ,F])
 ,(134,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F ,T])
 ,(135,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F ,T])
 ,(136,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T,F])
 ,(137,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T,F])
 ,(138,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T,T])
 ,(139,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,F])
 ,(140,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,T])
 ,(141,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,F])
 ,(142,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(143,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,T])
 ,(144,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,(145,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,(146,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T,T])
 ,(147,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,F])
 ,(148,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F])
 ,(149,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,T])
 ,(150,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F])
 ,(151,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T])
 ,(152,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F])
 ,(153,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,F ,T])
 ,(154,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F ,F])
 ,(155,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T])
 ,(156,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F ,T])
 ,(157,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(158,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(159,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T])
 ,(160,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T,F])
 ,(161,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,T,T])
 ,(162,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,(163,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T,T])
 ,(164,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,F])
 ,(165,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(166,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,(167,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,F ,T])
 ,(168,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,(169,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,T])
 ,(170,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,F])
 ,(171,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F])
 ,(172,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,T,T])
 ,(173,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,T])
 ,(174,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(175,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,(176,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,F ,T])
 ,(177,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,T,T])
 ,(178,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,F])
 ,(179,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F ,T])
 ,(180,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,(181,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,T])
 ,(182,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F])
 ,(183,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T])
 ,(184,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,(185,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F])
 ,(186,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T])
 ,(187,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F])
 ,(188,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F])
 ,(189,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T])
 ,(190,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(191,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T])
 ,(192,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,F])
 ,(193,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,T])
 ,(194,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(195,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T])
 ,(196,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(197,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F])
 ,(198,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(199,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F ,T])
 ,(200,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F])
 ,(201,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T])
 ,(202,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F])
 ,(203,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,F])
 ,(204,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,T])
 ,(205,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T])
 ,(206,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T])
 ,(207,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T,T])
 ,(208,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F])
 ,(209,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T,T])
 ,(210,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(211,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,F])
 ,(212,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F ,T])
 ,(213,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(214,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,F])
 ,(215,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F])
 ,(216,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F ,T])
 ,(217,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T,T])
 ,(218,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(219,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,(220,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T])
 ,(221,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,T,T])
 ,(222,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,F])
 ,(223,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,F ,T])
 ,(224,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,(225,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T])
 ,(226,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,(227,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F ,T])
 ,(228,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,(229,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T,T])
 ,(230,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F ,T])
 ,(231,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T])
 ,(232,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,(233,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(234,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F ,T])
 ,(235,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T,T])
 ,(236,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F])
 ,(237,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T])
 ,(238,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,(239,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F])
 ,(240,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(241,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,F])
 ,(242,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,(243,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,(244,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,T,T,T])
 ,(245,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,F])
 ,(246,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,F ,T])
 ,(247,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,F])
 ,(248,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,F ,T,T])
 ,(249,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F])
 ,(250,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,F])
 ,(251,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,F ,T])
 ,(252,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F])
 ,(253,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,T])
 ,(254,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,F ,F ,F])
 ,(255,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,F ,T,T,T,F])
 ,(256,[T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T])
 ]
-- space for user code<<

data HuffmanTree =  
    Nil
    | Leaf Int
    | Internal HuffmanTree HuffmanTree
    deriving (Show,  Eq)

addSymbol :: HuffmanTree -> (Int, [Bit]) -> HuffmanTree
addSymbol Nil (!x, T:bits) = Internal Nil (addSymbol Nil (x, bits))
addSymbol Nil (!x, F:bits) = Internal (addSymbol Nil (x, bits)) Nil
addSymbol (Internal !l r) (!x, T:bits) = Internal l (addSymbol r (x, bits))
addSymbol (Internal !l r) (!x, F:bits) = Internal (addSymbol l (x, bits)) r
addSymbol x@(Leaf _) _ = x
addSymbol _ (x, []) = Leaf x

huffmanTree :: HuffmanTree
huffmanTree = L.foldr (flip addSymbol) Nil huffmanTable

decodeBit :: HuffmanTree -> [Bit] -> (Int, [Bit])
decodeBit (Internal l r) (T:bits) = decodeBit r bits
decodeBit (Internal l r) (F:bits) = decodeBit l bits
decodeBit (Leaf x) left = (x,left)

boolToBit :: Bool -> Bit
boolToBit True = T
boolToBit False = F

bitToBool ::  Bit -> Bool
bitToBool T =  True
bitToBool F = False
decodeBV :: HuffmanTree -> BV.BV -> (Int, BV.BV)
decodeBV t bv = 
    let
        (i, l) = decodeBit t (L.map boolToBit . toBits $ bv)
    in
        (i, fromBits (L.map bitToBool l))
